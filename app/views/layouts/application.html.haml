!!!
%html
  %head
    %title ScrapeYelpBindo
    %link{:href => "https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.css", :rel => "stylesheet"}
    %script{:src => "http://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.js"}

    %script{ :src => 'https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/leaflet.markercluster.js'}
    %link{ :href => 'https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/MarkerCluster.css', :rel => 'stylesheet'}
    %link{ :href => 'https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/MarkerCluster.Default.css', :rel => 'stylesheet'}

    = stylesheet_link_tag    "application", :media => "all"
    = csrf_meta_tags
    = javascript_include_tag "application"
    :css
      body { margin:0; padding:0; }
      #map { position:relative; display:block; top:0; bottom:0; width:100%; height: 400px}

  %body
  #map.clearfix
  %nav.clearfix
    %ul
      %li
        %a.zoom{ href: '#', data: { zoom: 5 } }
          Zoom A
      %li
        %a.zoom{ href: '#', data: { zoom: 8 } }
          Zoom B
      %li
        %a.zoom{ href: '#', data: { zoom: 11 } }
          Zoom C
  %nav.clearfix
    %ul
      %li
        %h1 Scraping Yelp
      / %li
      /   %a{:href => ""} Map
      / %li
      /   %a{:href => ""} Categories
      / %li
      /   %a{:href => ""} State
      / %li
      /   %a{:href => ""} Neighborhood
    .container
      .sixteen.columns
        =yield

        :javascript
          var src = 'https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.js';
          L.mapbox.accessToken = 'pk.eyJ1Ijoiam1hYzg0MjQiLCJhIjoiczNhRG5wNCJ9.9Th4UpP0dmkcTH_c9bV2tA';

          var map = L.mapbox.map('map')
            .setView([34.0500, -118.2500], 14);

          var myLayer = L.mapbox.featureLayer().addTo(map);

          $.get('/businesses/get_markers.json', function(response) {
            myLayer.setGeoJSON(response);
          });

          // Add custom popup html to each marker.
          myLayer.on('layeradd', function(e) {
              var marker = e.layer;
              var feature = marker.feature;
              var popupContent =  '<div id="' + feature.properties.id + '" class="popup">' +
                                      '<h2>' + feature.properties.title + '</h2>' +
                                      '<div class="details">' +
                                          '<img src="' + feature.properties.image + '">' +
                                          '<address>' + feature.properties.address + '</address>' +
                                      '</div>' +
                                  '</div>';

              marker.bindPopup(popupContent,{
                  closeButton: false,
                  minWidth: 320
              });
          });

          // Since featureLayer is an asynchronous method, we use the `.on('ready'`
          // call to only use its marker data once we know it is actually loaded.
          L.mapbox.featureLayer('jmac8424.k9926mgl').on('ready', function(e) {
              // The clusterGroup gets each marker in the group added to it
              // once loaded, and then is added to the map
              var clusterGroup = new L.MarkerClusterGroup({
                // The iconCreateFunction takes the cluster as an argument and returns
                // an icon that represents it. We use L.mapbox.marker.icon in this
                // example, but you could also use L.icon or L.divIcon.
                iconCreateFunction: function(cluster) {
                  return L.mapbox.marker.icon({
                    // show the number of markers in the cluster on the icon.
                    'marker-symbol': cluster.getChildCount(),
                    'marker-color': '#422'
                  });
                }
              });
              e.target.eachLayer(function(layer) {
                  clusterGroup.addLayer(layer);
              });
              map.addLayer(clusterGroup);
          });

          map.featureLayer.on('click', function(e) {
              map.panTo(e.layer.getLatLng());
          });

          $('a.zoom').on('click', function(e) {
            e.preventDefault();
            map.setView(map.getCenter(), this.getAttribute('data-zoom'));
          });



