!!!
%html
  %head
    %title ScrapeYelpBindo
    %link{:href => "https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.css", :rel => "stylesheet"}
    %script{:src => "https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.js"}

    %script{ :src => 'https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/leaflet.markercluster.js'}
    %link{ :href => 'https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/MarkerCluster.css', :rel => 'stylesheet'}
    %link{ :href => 'https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/MarkerCluster.Default.css', :rel => 'stylesheet'}

    = stylesheet_link_tag    "application", :media => "all"
    = csrf_meta_tags
    = javascript_include_tag "application"
    :css
      body { margin:0; padding:0; }
      #map { position:relative; display:block; top:0; bottom:0; width:100%; height: 450px}
      .legend label,
      .legend span {
        display:block;
        float:left;
        height:15px;
        width:10%;
        text-align:center;
        font-size:9px;
        color:#808080;
        }
  %body
  #map.clearfix
  %nav#menu-ui.clearfix.menu-ui
    %a.zoom{ href: '#', :data => { zoom: 8 } }
      State
    %a.zoom{ href: '#', :data => { zoom: 12 } }
      City
    %a.zoom{ href: '#', :data => { zoom: 18, 'position' => '34.1231385, -118.2689007' } }
      Individual Store
    %a#filter-all.all{:href => "#"} All businesses
    %a#filter-food.food{:href => "#"} Restaurants
  %p Click the search icon to search by location.
  #legend{:style => "display:none;"}
  %h5{:style => "text-align:center;"}  Key
  %nav.legend.clearfix
    %span{:style => "background:#FF0000;"}
    %span{:style => "background:#E80C7A;"}
    %span{:style => "background:#6A7287;"}
    %span{:style => "background:#0A8CFF;"}
    %span{:style => "background:#16FFF1;"}
    %span{:style => "background:#09E89B;"}
    %span{:style => "background:#0AFF65;"}
    %span{:style => "background:#FF0A80;"}
    %span{:style => "background:#B609E8;"}
    %span{:style => "background:#7A38E8;"}
    %label Active Life
    %label Arts
    %label Auto 
    %label Beauty Services
    %label Education
    %label Financial Services
    %label Food
    %label Health
    %label Home Services
    %label Hotel/Travel
  %br
  %nav.legend.clearfix
    %span{:style => "background:#FFF50E;"}
    %span{:style => "background:#D3D3D3;"}
    %span{:style => "background:#20E840;"}
    %span{:style => "background:#000;"}
    %span{:style => "background:#02FF2C;"}
    %span{:style => "background:#C607FF;"}
    %span{:style => "background:#FFA500;"}
    %span{:style => "background:#FFF50E;"}
    %span{:style => "background:#0C72FF;"}
    %span{:style => "background:#5C4033;"}
    %label Local Flavor
    %label Local Services
    %label Mass Media 
    %label Nightlife
    %label Pets
    %label Professional Services
    %label Public Services/Gov't
    %label Real Estate
    %label Religious Orgs.
    %label Restaurants
  %br
  %nav.legend.clearfix
    %span{:style => "background:#42E8B4;"}
    %label 
    %label 
    %label 
    %label 
    %label 
    %label 
    %label 
    %label 
    %label 
    %label Shopping
  %br
  %h1 Scraping Yelp
  .container
    .sixteen.columns
      / =#yield

    :javascript
      var src = 'https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.js';
      
      L.mapbox.accessToken = 'pk.eyJ1Ijoiam1hYzg0MjQiLCJhIjoiczNhRG5wNCJ9.9Th4UpP0dmkcTH_c9bV2tA';

      var map = L.mapbox.map('map', 'jmac8424.k6lb8hf1').setView([34.1014861, -118.4571974], 10)
        .addControl(L.mapbox.geocoderControl('mapbox.places-v1')),
          zipcode = document.getElementById('filter-zipcode'),
          all = document.getElementById('filter-all'),
          state = document.getElementById('filter-state'),
          food = document.getElementById('filter-food');
      map.legendControl.addLegend(document.getElementById('legend').innerHTML);

      food.onclick = function(e) {
          all.className = '';
          this.className = 'active';
          // The setFilter function takes a GeoJSON feature object
          // and returns true to show it or false to hide it.
          map.markerLayer.setFilter(function(f) {
              return f.properties['category']['name'] === 'food';
          });
          return false;
        };

      all.onclick = function() {
        food.className = '';
        this.className = 'active';
        map.markerLayer.setFilter(function(f) {
            // Returning true for all markers shows everything.
            return true;
        });
        return false;
      };

      var myLayer = L.mapbox.featureLayer().addTo(map);

      $.get('/businesses/get_markers.json', function(response) {
        myLayer.setGeoJSON(response);
      });

      //disable scroll zoom
      map.scrollWheelZoom.disable();

      // Add custom popup html to each marker.
      myLayer.on('layeradd', function(e) {
          var marker = e.layer;
          var feature = marker.feature;
          var popupContent =  '<div id="' + feature.properties.id + '" class="popup">' +
                              '<h2>' + feature.properties.title + '</h2>' +
                              '<h5>' + feature.properties.category + '</h5>' +
                              '<div class="details">' +
                              '<img src="' + feature.properties.image + '">' +
                              '<address>' + feature.properties.address + '</address>' + 
                              '<zipcode>' + feature.properties.zipcode + '</zipcode>'
                                  '</div>' +
                              '</div>';

          marker.bindPopup(popupContent,{
              closeButton: false,
              minWidth: 320
          });
      });

      L.mapbox.featureLayer('jmac8424.k6lb8hf1').on('ready', function(e) {
          // The clusterGroup gets each marker in the group added to it
          // once loaded, and then is added to the map
          var clusterGroup = new L.MarkerClusterGroup({
            iconCreateFunction: function(cluster) {
              return L.mapbox.marker.icon({
                // show the number of markers in the cluster on the icon.
                'marker-symbol': cluster.getChildCount(),
                'marker-color': '#422'
              });
            }
          });
          e.target.eachLayer(function(layer) {
              clusterGroup.addLayer(layer);
          });
          map.addLayer(clusterGroup);
      });

      map.featureLayer.on('click', function(e) {
          map.panTo(e.layer.getLatLng());
      });

      $('a.zoom').on('click', function(e) {
        e.preventDefault();
        map.setView(map.getCenter(), this.getAttribute('data-zoom'));
      });


