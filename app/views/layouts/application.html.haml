!!!
%html
  %head
    %title ScrapeYelpBindo
    %link{:href => "https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.css", :rel => "stylesheet"}
    %script{:src => "https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.js"}

    %script{ :src => 'https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/leaflet.markercluster.js'}
    %link{ :href => 'https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/MarkerCluster.css', :rel => 'stylesheet'}
    %link{ :href => 'https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/MarkerCluster.Default.css', :rel => 'stylesheet'}

    = stylesheet_link_tag    "application", :media => "all"
    = csrf_meta_tags
    = javascript_include_tag "application"
    :css
      body { margin:0; padding:0; }
      #map { position:relative; display:block; top:0; bottom:0; width:100%; height: 400px}
  %body
  #map.clearfix
  %nav#menu-ui.clearfix.menu-ui
    %a.zoom{ href: '#', :data => { zoom: 8 } }
      State
    %a.zoom{ href: '#', :data => { zoom: 12 } }
      City
    %a.zoom{ href: '#', :data => { zoom: 18, 'position' => '34.1231385, -118.2689007' } }
      Individual Store
    %a#filter-all.all{:href => "#"} All businesses
    %a#filter-food.food{:href => "#"} Restaurants
  %p Click the search icon to search by location.
  
  %h1 Scraping Yelp
  .container
    .sixteen.columns
      =yield

    :javascript
      var src = 'https://api.tiles.mapbox.com/mapbox.js/v2.1.4/mapbox.js';
      
      L.mapbox.accessToken = 'pk.eyJ1Ijoiam1hYzg0MjQiLCJhIjoiczNhRG5wNCJ9.9Th4UpP0dmkcTH_c9bV2tA';

      var map = L.mapbox.map('map', 'jmac8424.k6lb8hf1').setView([34.0731, -118.3994], 14)
        .addControl(L.mapbox.geocoderControl('mapbox.places-v1')),
          zipcode = document.getElementById('filter-zipcode')
          all = document.getElementById('filter-all'),
          state = document.getElementById('filter-state'),
          food = document.getElementById('filter-food');

      food.onclick = function(e) {
          all.className = '';
          this.className = 'active';
          // The setFilter function takes a GeoJSON feature object
          // and returns true to show it or false to hide it.
          map.markerLayer.setFilter(function(f) {
              return f.properties['category']['name'] === 'food';
          });
          return false;
        };

        all.onclick = function() {
          food.className = '';
          this.className = 'active';
          map.markerLayer.setFilter(function(f) {
              // Returning true for all markers shows everything.
              return true;
          });
          return false;
        };

      var myLayer = L.mapbox.featureLayer().addTo(map);

      $.get('/businesses/get_markers.json', function(response) {
        myLayer.setGeoJSON(response);
      });

      //disable scroll zoom
      map.scrollWheelZoom.disable();

      // Add custom popup html to each marker.
      myLayer.on('layeradd', function(e) {
          var marker = e.layer;
          var feature = marker.feature;
          var popupContent =  '<div id="' + feature.properties.id + '" class="popup">' +
                              '<h2>' + feature.properties.title + '</h2>' +
                              '<h5>' + feature.properties.category + '</h5>' +
                              '<div class="details">' +
                              '<img src="' + feature.properties.image + '">' +
                              '<address>' + feature.properties.address + '</address>' + 
                              '<zipcode>' + feature.properties.zipcode + '</zipcode>'
                                  '</div>' +
                              '</div>';

          marker.bindPopup(popupContent,{
              closeButton: false,
              minWidth: 320
          });
      });

      L.mapbox.featureLayer('jmac8424.k6lb8hf1').on('ready', function(e) {
          // The clusterGroup gets each marker in the group added to it
          // once loaded, and then is added to the map
          var clusterGroup = new L.MarkerClusterGroup({
            iconCreateFunction: function(cluster) {
              return L.mapbox.marker.icon({
                // show the number of markers in the cluster on the icon.
                'marker-symbol': cluster.getChildCount(),
                'marker-color': '#422'
              });
            }
          });
          e.target.eachLayer(function(layer) {
              clusterGroup.addLayer(layer);
          });
          map.addLayer(clusterGroup);
      });

      map.featureLayer.on('click', function(e) {
          map.panTo(e.layer.getLatLng());
      });

      $('a.zoom').on('click', function(e) {
        e.preventDefault();
        map.setView(map.getCenter(), this.getAttribute('data-zoom'));
      });


